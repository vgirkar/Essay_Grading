/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package essay;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import edu.stanford.nlp.tagger.maxent.MaxentTagger;
import weka.classifiers.functions.SMOreg;
import weka.core.Instances;
import weka.core.Instance;
import weka.core.DenseInstance;
import weka.core.converters.CSVLoader;
import java.text.DecimalFormat;
/**
 *
 * @author admin
 */
public class TestFrame extends javax.swing.JFrame {

    /**
     * Creates new form TestFrame
     */
    
    Details dt=new Details();
    
    public TestFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Bell MT", 0, 36)); // NOI18N
        jLabel1.setText("Predict Essay Grading");

        jLabel2.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jLabel2.setText("Select Essay");

        jTextField1.setEditable(false);

        jButton1.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jButton2.setText("Test");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 102));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(281, 281, 281)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(43, 43, 43)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addGap(44, 44, 44))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            JFileChooser fc = new JFileChooser();
            fc.setCurrentDirectory(new File("."));
            fc.setFileFilter(new FileFilter()
                {
                    public boolean accept(File f)
                    {
                        String name=f.getName().toLowerCase();
                        return name.endsWith(".txt") || f.isDirectory();

                    }

                    public String getDescription()
                    {
                        return   "Text Files";
                    }
                });
                int ch=fc.showOpenDialog(this);
                if(ch==JFileChooser.APPROVE_OPTION)
                {
                    String path=fc.getSelectedFile().getAbsolutePath();
                    jTextField1.setText(path);      
                    FileInputStream fis=new FileInputStream(new File(path));
                    byte bt[]=new byte[fis.available()];
                    fis.read(bt);
                    fis.close();
                    
                    jTextArea1.setText(new String(bt));
                }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            String path=jTextField1.getText().trim();
            String txt=jTextArea1.getText().trim();
            
            if(path.equals("")||txt.equals(""))
                JOptionPane.showMessageDialog(this, "Select Test Essay");
            else
            {
                dt.testPre="";
                dt.testSen=new ArrayList();
                dt.testWord=new ArrayList();
                
    
                dt.testCW=new double[3];
                
                
               String g1= process(txt);
               
               double term1[]=new double[dt.selFeat.size()];
               for(int j=0;j<dt.selFeat.size();j++)
                {
                    String f1=dt.selFeat.get(j).toString();
                   double tm=findTermFre(f1,g1);                  
                    term1[j]=tm;
                }
               
                double in1[]=findInverse(dt.selFeat);
            
                double tfidf1[]=new double[term1.length] ;
                for(int i=0;i<term1.length;i++)
                {
                    tfidf1[i]=term1[i]*in1[i];                    
                }
                CSVLoader csv=new CSVLoader();
                csv.setSource(new File("data1.csv"));
			
                Instances ins=csv.getDataSet();
                ins.setClassIndex(ins.numAttributes() - 1);
                SMOreg svr=new SMOreg();
                svr.buildClassifier(ins);
                
                Instance ins1=new DenseInstance(ins.numAttributes());
                for(int i=0;i<dt.testCW.length;i++)
                    ins1.setValue(i, dt.testCW[i]);
                
                for(int i=0;i<tfidf1.length;i++)
                    ins1.setValue(i+4, tfidf1[i]);
                
                ins1.setDataset(ins);
                    
                double r1=svr.classifyInstance(ins1);
                System.out.println("predicted = "+r1);
                
                DecimalFormat df=new DecimalFormat("#.###");
                String res=df.format(r1);
                jLabel3.setText(res);
                
                
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public String process(String g1)
    {
        String res="";
        try
        {
            String reg="(?<=\\w[\\w\\)\\]][\\.\\?\\!]\\s)";
            ArrayList<String> stop=read_stopwd();
            MaxentTagger ob=new MaxentTagger(".\\models\\left3words-wsj-0-18.tagger");
            String sen[]=g1.split(reg);
            ArrayList at1=new ArrayList();
            
            for(int j=0;j<sen.length;j++)
            {
                String g2=sen[j].replaceAll("[^a-zA-Z]", " ");
                at1.add(g2);
            }
            
            dt.testSen=at1;
            
            String wd[]=g1.split("\\s+");
            ArrayList at2=new ArrayList();
            int ch=0;
            for(int j=0;j<wd.length;j++)            
            {
                String g2=wd[j].replaceAll("[^a-zA-Z]", " ").trim();
                ch=ch+g2.length();
                at2.add(g2);
            }
            dt.testWord=at2;
            
            String g2=g1.replaceAll("[^a-zA-Z]", " ");
            String s2[]=g2.trim().toLowerCase().split(" ");
            String sm="";
            for(int j=0;j<s2.length;j++)
            {
                if(!stop.contains(s2[j].trim()))
                {
                    if(!s2[j].trim().equals(""))
                    {
                        String ret=ob.tagString(s2[j]).trim();
                        if(ret.endsWith("/NN")||ret.endsWith("/NNS")||ret.endsWith("/NNP"))
                        {
                            if(s2[j].trim().length()>2)
                                sm=sm+s2[j].trim()+" ";
                        }
                    }
                }
            }
            dt.testPre=sm;
            dt.testCW[0]=ch; // char
            dt.testCW[1]=at2.size(); // word
            dt.testCW[2]=at1.size(); // sent
            
            res=sm;
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return res;
    }
    static ArrayList<String> read_stopwd()throws Exception
    {
        ArrayList<String> st=new ArrayList<String>();
        Scanner scan1 = null;

        scan1 = new Scanner(new BufferedReader(new FileReader("stopwords1.txt")));
        while (scan1.hasNext())
            st.add(scan1.next());

       return(st);
    }
    
     public double findTermFre(String tm,String cn)
    {
        double tr=0;
        try
        {
            double cc=0;
            String g1[]=cn.split(" ");
            for(int i=0;i<g1.length;i++)
            {
                if(g1[i].equals(tm))
                    cc++;
            }
            
            tr=cc/(double)g1.length;
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return tr;
    }
     public double[] findInverse(ArrayList ft)
    {
        double de[]=new double[ft.size()];
        try
        {
            for(int i=0;i<ft.size();i++)
            {
                String g1=ft.get(i).toString();
                double cn1=0;
                
                /*for(int j=0;j<dt.preEss.length;j++)
                {
                    String g2=dt.preEss[j].trim();
                    if(g2.contains(g1))
                        cn1++;
                }*/
                if(dt.testPre.contains(g1))
                    cn1=1;
                
                if(cn1==0)
                {
                    de[i]=1;
                }
                else
                {
                 //   cn1=1;
                    //double in1=Math.log10((double)dt.preEss.length/cn1);
                    double in1=Math.log10(1.0);
                    de[i]=in1;
                }
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return de;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
